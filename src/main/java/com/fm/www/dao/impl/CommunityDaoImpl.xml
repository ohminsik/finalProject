<?xml version="1.0" encoding="UTF-8"?>
<!-- 마이바티스 3 Mapper DOCTYPE -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 매퍼 설정 -->
<mapper namespace="com.fm.www.dao.face.CommunityDao">


   <!-- 공지사항 게시글 전체 수 --> 
   <select id="noticeTotalCount" resultType="int">
      select count(*) from board_tb M
      
      where board_div = 1 and delete_yn = 'N'
         <choose>
            <when test="search == 'board_title'">
               AND board_title Like '%' || #{word} || '%'
            </when>
            <when test="search == 'board_content'">
               AND board_content Like '%' || #{word} || '%'
            </when>
            <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
         </choose>
   </select>
   
   <select id="noticeGetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
      SELECT * FROM (
         SELECT rownum rnum, B.* FROM (
            SELECT   M.*
            FROM board_tb M
           
            WHERE delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
            and board_div = 1
            ORDER BY board_no desc
         ) B
         ORDER BY rnum
      ) R
      WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}      
   </select>
   
   <select id="noticeView" parameterType="com.fm.www.dto.Board_tb" resultType="com.fm.www.dto.Board_tb">
      select * from board_tb
      where board_no = #{board_no}
   </select>
   
   <update id="noticeUphit" parameterType="int">
      update board_tb
      set board_cnt = board_cnt +1
      where board_no = #{board_no} 
   </update>
   
   <select id="noticeGetBoard_no" resultType="int">
      SELECT board_tb_seq.nextval FROM dual
   </select>
   
   <insert id="noticeInsertWrite1" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
         (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
         values(#{board_no}, 1 , #{board_title }, #{board_content } ,0 ,'N' , #{user_no }, sysdate)
   </insert>
   
   <insert id="noticeInsertPhoto" parameterType="com.fm.www.dto.Photo">
      insert into photo
         (photo_no, photo_origin, photo_stored, board_fg, board_no, photo_delete_yn )
         values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 1, #{board_no }, 'N' ) 
   </insert>
   
   <insert id="noticeInsertWrite2" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
         (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
         values(board_tb_seq.nextval,  1, #{board_title }, #{board_content } , 0 ,'N', #{user_no }, sysdate )
   </insert>
   
   <select id="noticePhotoView" parameterType="com.fm.www.dto.Photo" resultType="com.fm.www.dto.Photo">
      select * from photo
      where board_no = #{board_no}
   </select>
   
   <update id="noticeDelete" parameterType="int">      
      UPDATE board_tb
      SET delete_yn = 'Y'
      where board_no = #{board_no}
   </update>
   
   <insert id="noticeCommentInsert" parameterType="com.fm.www.dto.Board_Reply">
      insert into board_reply
         (REPLY_NO, BOARD_FG, REPLY_CONTENT, REPLY_DATE, REPLY_DELETE_YN, board_no, user_no)
         values(board_reply_seq.nextval,  1, #{reply_content },  sysdate,'N' , #{board_no }, #{user_no })
   </insert>
   
   <select id="noticeReplyList" parameterType="com.fm.www.dto.Board_Reply" resultType="com.fm.www.dto.Board_Reply">
      select * from board_reply B
      JOIN USER_TB U ON(U.USER_NO = B.USER_NO)
      where reply_delete_yn = 'N'
      and board_no = #{board_no}
       ORDER BY reply_no asc
   </select>
   
   <update id="noticeReplyDelete" parameterType="int">
      UPDATE board_reply
      SET reply_delete_yn = 'Y'
      where reply_no = #{reply_no}
   </update>
   
   <select id="replyCount" parameterType="int" resultType="int">
      select COUNT(*) from board_reply 
      where reply_delete_yn = 'N'
      and board_no = #{board_no}
   </select>

   
   
   <!--팀 가입 인사 리스트 총 개수  -->
      <select id="teamIntrototalCount" resultType="int">
      select count(*) from board_tb M
         JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            where board_div = 2 and delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
   </select>
    <!--팀 가입 인사 리스트 페이징 처리 및 출력-->
    <select id="teamIntrogetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
               
      SELECT * FROM (
         SELECT rownum rnum, B.* FROM (
            SELECT U.USER_nick,  M.*
            FROM board_tb M
            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            WHERE delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
                  <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
            and board_div = 2
            ORDER BY board_no desc
         ) B
         ORDER BY rnum
      ) R
      WHERE rnum BETWEEN #{startNo} AND #{endNo}
   </select>
   
      <!--팀 가입 인사 view 정보  --> 
      <select id="teamIntroView" parameterType="int" resultType="com.fm.www.dto.Board_tb">
         select * from board_tb
         where board_no= #{board_no}
      
      </select>
      <!-- 팀 가입 인사 게시글 조회수 증가 -->
      <update id="teamIntrouphit" parameterType="int">
        update board_tb
         set BOARD_CNT = BOARD_CNT +1
          where board_no = #{board_no}    
      </update>
   <!--다음글 번호 가져오기  -->
   <select id="teamIntrogetboard_no" resultType="int">
       SELECT board_tb_seq.nextval FROM dual
   </select>
   <!-- 글쓰기 -->
   <insert id="teamIntrowrite" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
            (user_no,board_no, board_div, board_title, board_content,board_date,board_cnt, delete_yn)
        values(#{user_no},#{board_no},  2, #{board_title}, #{board_content} , sysdate,0,'N')
   </insert>
   <!-- 파일첨부 -->
   <insert id="teamIntrophotowrite" parameterType="com.fm.www.dto.Photo">
       insert into photo
         (PHOTO_NO, photo_origin, PHOTO_STORED, BOARD_FG, BOARD_NO, PHOTO_DELETE_YN )
         values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 2, #{board_no }, 'N' ) 
     </insert>
     <!--  팀 가입 인사 photo view 정보-->
     <select id="teamIntrophotoView" parameterType="int" resultType="com.fm.www.dto.Photo">
        select * from photo 
        where board_no= #{board_no}
     </select>
     <!-- 팀 가입 인사 검색 리스트  개수 -->
     <select id="teamIntrosearchtotalCount" resultType="int">
        select count(*) from board_tb
        where ${search} like '%'|| #{word} || '%'   
     </select>

     <!-- 팀 가입 인사 검색리스트 페이징 처리 및 출력 -->
     <select id="teamIntroserachgetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
          SELECT * FROM (
               SELECT rownum rnum, B.* FROM (
               SELECT U.USER_nick,  M.*
               FROM board_tb M
               JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
               WHERE delete_yn = 'N'
                and board_div = 2
                and ${search} like '%'|| #{word} || '%'   
            ORDER BY board_no desc
            ) B
            ORDER BY rnum
            ) R
             WHERE rnum BETWEEN #{startNo} AND #{endNo}
     </select>
     <!-- 팀 가입 인사 삭제 -->
     <update id="teamIntrodelete" parameterType="int">
        update board_tb
           set delete_yn= 'Y'
           where board_no = #{board_no}
     </update>
     <!--수정 전 글 가져오기   -->
     <select id="teamIntrogetupdateview" parameterType="int" resultType="com.fm.www.dto.Board_tb">
        select * from board_tb
        where board_no = #{board_no}
     </select>
     <!-- 수정 전 파일 첨부 가져오기 -->
     <select id="teamIntrogetUpdatePhoto" parameterType="int" resultType="com.fm.www.dto.Photo">
         select * from photo
         where board_no= #{board_no}
     </select>
     <!-- 수정 글 쓰기 -->
     <update id="teamIntroupdate" parameterType="com.fm.www.dto.Board_tb">
        update board_tb
           set board_title = #{board_title}
           , board_content = #{board_content}
           where board_no= #{board_no} 
     </update>
     <!-- 수정 파일첨부 -->
     <update id="teamIntrophotoupdate" parameterType="com.fm.www.dto.Photo">
           update photo
         set  photo_origin = #{photo_origin}
         , photo_stored = #{photo_stored}
         where board_no = #{board_no}
     </update>
     <!-- 파일첨부 존재 여부 -->
     <select id="teamIntrocntphoto" parameterType="int" resultType="int">
        select count(*) from photo
        where board_no = #{board_no}
     </select>
     <!--팀 가입 인사 댓글 등록 -->
     <insert id="teamIntroCommentInsert" parameterType="com.fm.www.dto.Board_Reply">
        insert into board_reply
         (REPLY_NO,BOARD_FG,REPLY_CONTENT,REPLY_DATE,REPLY_DELETE_YN, board_no , user_no)
         values(board_reply_seq.nextval,  2, #{reply_content},  sysdate,'N', #{board_no}, #{user_no})
     </insert>
     <!-- 댓글 리스트 정보 -->
     <select id="teamIntrogetreplylist" parameterType="int" resultType="com.fm.www.dto.Board_Reply">
        select * from board_reply B, user_tb U
      where B.user_no = U.user_no
      and reply_delete_yn= 'N'
      and board_no=#{board_no}
        ORDER BY reply_no asc
     </select>
     <!-- 팀 가입 인사 댓글 삭제 -->
     <update id="teamIntroCommentDelete" parameterType="int">
      update Board_Reply
      set reply_delete_yn = 'Y'
      where reply_no= #{reply_no} 
     </update>
     <!--댓글 리스트 개수 가져오기 -->
     <select id="teamIntrototalreplyCnt" parameterType="int" resultType="int">
        select count(*) from board_reply
        where board_no= #{board_no}
        and reply_delete_yn= 'N'
     </select>


    <!-- 자유 free -->
   <!-- 자유게시판 총 게시글 수  -->
   <select id="freeTotalCount" resultType="int">
      select count(*) from board_tb M
         JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            where board_div = 4 and delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
   </select>
   
   <select id="freeGetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
      SELECT * FROM (
         SELECT rownum rnum, B.* FROM (
            SELECT U.USER_nick,  M.*
            FROM board_tb M
            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            WHERE delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
            and board_div = 4
            ORDER BY board_no desc
         ) B
         ORDER BY rnum
      ) R
      WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}      
   </select>
   
   <!-- 자유 게시글 번호 생성하기 -->
   <select id="freeGetBoard_no" resultType="int">
      SELECT board_tb_seq.nextval FROM dual
   </select>
   
   <!-- 자유 글 번호 찾아 글 작성 -->
   <insert id="freeInserWrite1" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
      (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
      values(#{board_no}, 4 , #{board_title }, #{board_content } ,0 ,'N' , #{user_no }, sysdate)
   </insert>
   <insert id="freeInsertPhoto" parameterType="com.fm.www.dto.Photo">
      insert into photo
      (photo_no, photo_origin, photo_stored, board_fg, board_no, photo_delete_yn )
      values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 4, #{board_no }, 'N' ) 
   </insert>
   <!-- 자유 이미지 파일 없이 게시글 작성 -->
   <insert id="freeInsertWrite2" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
         (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
         values(board_tb_seq.nextval,  4, #{board_title }, #{board_content } , 0 ,'N', #{user_no }, sysdate )
   </insert>
   <!-- 자유 조회수 증가 -->
   <update id="freeUpHit" parameterType="int">
      update board_tb
      set board_cnt = board_cnt +1
      where board_no = #{board_no} 
   </update>
   
   <!-- 자유 지정 게시글 정보 가져오기 -->
    <select id="freeView" parameterType="com.fm.www.dto.Board_tb" resultType="com.fm.www.dto.Board_tb">
      select * from board_tb
      where board_no = #{board_no}
   </select>
   <!-- 자유 사진 가져오기 -->
    <select id="freePhotoView" parameterType="com.fm.www.dto.Photo" resultType="com.fm.www.dto.Photo">
      select * from photo
      where board_no = #{board_no}
   </select>
   <!-- 자유 댓글 리스트 가져오기 -->
    <select id="freeReplyList" parameterType="com.fm.www.dto.Board_Reply" resultType="com.fm.www.dto.Board_Reply">
      select * from board_reply B
      JOIN USER_TB U ON(U.USER_NO = B.USER_NO)
      where reply_delete_yn = 'N'
      and board_no = #{board_no}
       ORDER BY reply_no asc
   </select>
   
   <!--자유 수정 전 글 가져오기   -->
   <select id="freeUpdateView" parameterType="int" resultType="com.fm.www.dto.Board_tb">
      select * from board_tb
      where board_no = #{board_no}
   </select>
   
   <!-- 자유 수정 전 파일 첨부 가져오기 -->
   <select id="freeUpdatePhoto" parameterType="int" resultType="com.fm.www.dto.Photo">
      select * from photo
      where board_no= #{board_no}
   </select>
   
   <!-- 자유 수정  파일첨부 존재 여부 -->
   <select id="freeCntPhoto" parameterType="int" resultType="int">
      select count(*) from photo
      where board_no = #{board_no}
     </select>
     
   <!-- 자유 수정 글쓰기 -->     
     <update id="freeUpdate" parameterType="com.fm.www.dto.Board_tb">
      update board_tb
         set board_title = #{board_title}
         , board_content = #{board_content}
         where board_no= #{board_no} 
     </update>
     
     <!-- 자유 이미지 존재 할 때 수정 파일첨부 -->
     <update id="freePhotoUpdate" parameterType="com.fm.www.dto.Photo">
      update photo
         set  photo_origin = #{photo_origin}
         , photo_stored = #{photo_stored}
         where board_no = #{board_no}
     </update>
     
     <!-- 자유 이미지 없을 때 파일첨부 -->
     <insert id="freePhotoWrite" parameterType="com.fm.www.dto.Photo">
      insert into photo
         (PHOTO_NO, photo_origin, PHOTO_STORED, BOARD_FG, BOARD_NO, PHOTO_DELETE_YN )
         values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 4, #{board_no }, 'N' ) 
     </insert>
     
     <!-- 자유 삭제 -->
     <update id="freeDelete" parameterType="int">
      update board_tb
         set delete_yn= 'Y'
         where board_no = #{board_no}
     </update>
     
     <!-- 자유 댓글 등록 -->
     <insert id="freeCommentInsert" parameterType="com.fm.www.dto.Board_Reply">
      insert into board_reply
         (REPLY_NO,BOARD_FG,REPLY_CONTENT,REPLY_DATE,REPLY_DELETE_YN, board_no , user_no)
         values(board_reply_seq.nextval,  4, #{reply_content},  sysdate,'N', #{board_no}, #{user_no})
     </insert>
     
     <!-- 자유 댓글 삭제 -->
     <update id="freeCommentDelete" parameterType="int">
      update Board_Reply
         set reply_delete_yn = 'Y'
         where reply_no= #{reply_no} 
     </update>
     
     <!-- 자유 댓글 갯수 구하기 -->
     <select id="freeReplyCount" parameterType="int" resultType="int">
      select COUNT(*) from board_reply 
         where reply_delete_yn = 'N'
         and board_no = #{board_no}
   </select>
  
  
  <!-- 후기 review --> 
  <!-- 경기 후기 게시글 전체 수  -->
   <select id="reviewTotalCount" resultType="int">
      select count(*) from board_tb M
         JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            where board_div = 5 and delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
   </select>
   
   <!-- 경기 후기 게시글  페이징 리스트 처리 -->
   <select id="reviewGetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
      SELECT * FROM (
         SELECT rownum rnum, B.* FROM (
            SELECT U.USER_nick,  M.*
            FROM board_tb M
            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            WHERE delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
            and board_div = 5
            ORDER BY board_no desc
         ) B
         ORDER BY rnum
      ) R
      WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}      
   </select>
   
   <!-- 경기 후기 댓글 갯수 구하기 -->
   <select id="reviewReplyCount" parameterType="int" resultType="int">
      select COUNT(*) from board_reply 
      where reply_delete_yn = 'N'
      and board_no = #{board_no}
   </select>
   
   <!-- 경기 후기 글 번호 생성하기 -->
   <select id="reviewGetBoard_no" resultType="int">
      SELECT board_tb_seq.nextval FROM dual
   </select>
   
   <!-- 경기 후기 글 번호 찾아 글 작성 -->
   <insert id="reviewInsertWrite1" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
      (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
      values(#{board_no}, 5 , #{board_title }, #{board_content } ,0 ,'N' , #{user_no }, sysdate)
   </insert>
   <insert id="reviewInsertPhoto" parameterType="com.fm.www.dto.Photo">
      insert into photo
      (photo_no, photo_origin, photo_stored, board_fg, board_no, photo_delete_yn )
      values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 5, #{board_no }, 'N' ) 
      </insert>
   
   <!-- 경기 후기 이미지 파일 없이 글 작성 -->
   <insert id="reviewInsertWrite2" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
         (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
         values(board_tb_seq.nextval,  5, #{board_title }, #{board_content } , 0 ,'N', #{user_no }, sysdate )
   </insert>
   
   <!-- 경기 후기 수정전 글 가져오기 -->
   <select id="reviewUpdateView" parameterType="int" resultType="com.fm.www.dto.Board_tb">
      select * from board_tb
      where board_no = #{board_no}
   </select>
   
   <!-- 경기 후기 수정전 파일첨부 가져오기-->
   <select id="reviewUpdatePhoto" parameterType="int" resultType="com.fm.www.dto.Photo">
      select * from photo
      where board_no= #{board_no}
   </select>
   
   <!-- 경기 후기 파일첨부 존재 여부 -->
   <select id="reviewCntPhoto" parameterType="int" resultType="int">
      select count(*) from photo
      where board_no = #{board_no}
     </select>
     
     <!-- 경기 후기 이미지 없을 때 파일첨부 -->
     <insert id="reviewPhotoWrite" parameterType="com.fm.www.dto.Photo">
      insert into photo
         (PHOTO_NO, photo_origin, PHOTO_STORED, BOARD_FG, BOARD_NO, PHOTO_DELETE_YN )
         values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 5, #{board_no }, 'N' ) 
     </insert>
     
   <!-- 경기 후기 수정 글쓰기 -->     
     <update id="reviewUpdate" parameterType="com.fm.www.dto.Board_tb">
      update board_tb
         set board_title = #{board_title}
         , board_content = #{board_content}
         where board_no= #{board_no} 
     </update>
     
     <!-- 경기 후기 이미지 존재 할 때 수정 파일첨부 -->
   
     <update id="reviewPhotoUpdate" parameterType="com.fm.www.dto.Photo">
      update photo
         set  photo_origin = #{photo_origin}
         , photo_stored = #{photo_stored}
         where board_no = #{board_no}
     </update>
     
     <!-- 경기 후기 댓글 등록 -->
     <insert id="reviewCommentInsert" parameterType="com.fm.www.dto.Board_Reply">
      insert into board_reply
         (REPLY_NO,BOARD_FG,REPLY_CONTENT,REPLY_DATE,REPLY_DELETE_YN, board_no , user_no)
         values(board_reply_seq.nextval,  5, #{reply_content},  sysdate,'N', #{board_no}, #{user_no})
     </insert>
   
   
   <!-- 중고장터  market --> 
   <!-- 중고장터 게시글 전체 수 -->
   <select id="usedTotalCount" resultType="int">
      select count(*) from board_tb M
         JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            where board_div = 6 and delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
   </select>
   <!-- 중고장터 게시글 페이징 리스트 처리 -->
   <select id="usedGetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
      SELECT * FROM (
         SELECT rownum rnum, B.* FROM (
            SELECT U.USER_nick,  M.*
            FROM board_tb M
            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            WHERE delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
            and board_div = 6
            ORDER BY board_no desc
         ) B
         ORDER BY rnum
      ) R
      WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}      
   </select>
   
   <!-- 중고장터 글 번호 찾아 글 작성 -->
   <insert id="usedInsertWrite1" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
      (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
      values(#{board_no}, 6 , #{board_title }, #{board_content } ,0 ,'N' , #{user_no }, sysdate)
   </insert>
   <insert id="usedInsertPhoto" parameterType="com.fm.www.dto.Photo">
      insert into photo
      (photo_no, photo_origin, photo_stored, board_fg, board_no, photo_delete_yn )
      values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 6, #{board_no }, 'N' ) 
   </insert>
   
   <!-- 중고장터 이미지 파일 없이 글 작성 -->
   <insert id="usedInsertWrite2" parameterType="com.fm.www.dto.Board_tb">
      insert into board_tb
         (board_no, board_div, board_title, board_content, board_cnt, delete_yn, user_no, board_date)
         values(board_tb_seq.nextval,  6, #{board_title }, #{board_content } , 0 ,'N', #{user_no }, sysdate )
   </insert>
   
   <!-- 중고장터 이미지 없을 때 파일첨부 -->
     <insert id="usedPhotoWrite" parameterType="com.fm.www.dto.Photo">
      insert into photo
         (PHOTO_NO, photo_origin, PHOTO_STORED, BOARD_FG, BOARD_NO, PHOTO_DELETE_YN )
         values(photo_seq.nextval, #{photo_origin }, #{photo_stored }, 6, #{board_no }, 'N' ) 
     </insert>
   
   <!-- 중고장터 댓글 등록 -->
     <insert id="usedCommentInsert" parameterType="com.fm.www.dto.Board_Reply">
      insert into board_reply
         (REPLY_NO,BOARD_FG,REPLY_CONTENT,REPLY_DATE,REPLY_DELETE_YN, board_no , user_no)
         values(board_reply_seq.nextval,  6, #{reply_content},  sysdate,'N', #{board_no}, #{user_no})
     </insert>
      <!-- 축구동영상 리스트 총 개수 -->
   <select id="soccerVideototalCount" resultType="int">
            select count(*) from board_tb M
            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            where board_div = 7 and delete_yn = 'N'
               <choose>
                  <when test="search == 'board_title'">
                     AND board_title Like '%' || #{word} || '%'
                  </when>
                  <when test="search == 'board_content'">
                     AND board_content Like '%' || #{word} || '%'
                  </when>
                  <when test="search == 'user_nick'">
                        AND user_nick Like '%' || #{word} || '%'
                     </when>
               </choose>
   </select>
   <!-- 축구 동영상 리스트 페이징 처리 및 출력 -->
   <select id="soccerVideoListgetList" parameterType="com.fm.www.util.Paging" resultType="com.fm.www.dto.Board_tb">
       SELECT * FROM (
         SELECT rownum rnum, B.* FROM (
            SELECT U.USER_nick,  M.*
            FROM board_tb M
            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
            WHERE delete_yn = 'N'
            <choose>
               <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'board_content'">
                  AND board_content Like '%' || #{word} || '%'
               </when>
                  <when test="search == 'board_title'">
                  AND board_title Like '%' || #{word} || '%'
               </when>
               <when test="search == 'user_nick'">
                  AND user_nick Like '%' || #{word} || '%'
               </when>
            </choose>
            and board_div = 7
            ORDER BY board_no desc
         ) B
         ORDER BY rnum
      ) R
      WHERE rnum BETWEEN #{startNo} AND #{endNo}
   </select>
   <!-- 축구 동영상 댓글 수 -->
   <select id="soccerVideototalreplyCnt" parameterType="int" resultType="int">
      select count(*) from board_reply
        where board_no= #{board_no}
        and reply_delete_yn= 'N'
   </select>
   <!-- 축구 동영상 게시글 조회수 증가  -->
   <update id="soccerVideouphit" parameterType="int">
        update board_tb
         set BOARD_CNT = BOARD_CNT +1
          where board_no = #{board_no}    
      </update>
   <!-- 축구 동영상 view 정보 -->
   <select id="soccerVideoView" parameterType="int" resultType="com.fm.www.dto.Board_tb">
         select * from board_tb
         where board_no= #{board_no}
      
      </select>
      <!--  축구 동영상 upload 영상-->
      <select id="soccerVideouplodView" parameterType="int" resultType="com.fm.www.dto.Movie">
         select * from movie
         where board_no= #{board_no}
      </select>
      <!-- 다음글 글 작성 -->
      <insert id="soccerVideoWrite" parameterType="com.fm.www.dto.Board_tb">
         insert into board_tb
       (board_no, board_div, board_title, board_content,board_date,board_cnt, delete_yn,user_no)
       values(#{board_no},  7, #{board_title}, #{board_content} , sysdate,0,'N',#{user_no})
      </insert>
      <!-- 다음글 동영상 업로드 -->
      <insert id="soccerVideoupload" parameterType="com.fm.www.dto.Movie">
         insert into movie
       (movie_no,board_fg,board_no,movie_address)
       values(movie_seq.nextval,7,#{board_no},#{movie_address})
      </insert>
      <!-- 축구 동영상 댓글 등록 -->
      <insert id="soccerVideoCommentInsert" parameterType="com.fm.www.dto.Board_Reply">
         insert into board_reply
         (REPLY_NO,BOARD_FG,REPLY_CONTENT,REPLY_DATE,REPLY_DELETE_YN, board_no , user_no)
         values(board_reply_seq.nextval,  7, #{reply_content},  sysdate,'N', #{board_no}, #{user_no})
      </insert>
   
   	<!-- 팀 모집 게시판 -->
		<!-- 팀 모집 게시판 검색리스트 페이징 처리 및 출력 -->	
		<select id="teamAddList" resultType="com.fm.www.dto.Board_tb" parameterType="com.fm.www.util.Paging">
	 		 SELECT * FROM (
	         SELECT rownum rnum, B.* FROM (
	            SELECT U.USER_nick,  M.*
	            FROM board_tb M
	            JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
	            WHERE delete_yn = 'N'
	            <choose>
	               <when test="search == 'board_title'">
	                  AND board_title Like '%' || #{word} || '%'
	               </when>
	               <when test="search == 'board_content'">
	                  AND board_content Like '%' || #{word} || '%'
	               </when>
	               <when test="search == 'user_nick'">
	                  AND user_nick Like '%' || #{word} || '%'
	               </when>
	            </choose>
	            and board_div = 3
	            ORDER BY board_no desc
	         ) B
	         ORDER BY rnum
	      ) R
	      WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	 	</select>
	 	
	 	<!--팀 모집 게시판 리스트 총 개수  -->
		<select id="getteamAddListtotalCnt" resultType="int">
	 		SELECT COUNT(*) FROM board_tb M
	 		JOIN USER_TB U ON(U.USER_NO = M.USER_NO)
			WHERE board_div = 3 AND delete_yn = 'N' 			
			<choose>
	               <when test="search == 'board_title'">
	               	and	board_title Like '%' || #{word} || '%'
	               </when>
	               <when test="search == 'board_content'">
	                and board_content Like '%' || #{word} || '%'
	               </when>
	               <when test="search == 'user_nick'">
	                and user_nick Like '%' || #{word} || '%'
	               </when>
	        </choose>
	 	</select>
	 	<!-- 게시글 상세 페이지 -->
	 	<select id="teamAddView" resultType="com.fm.www.dto.Board_tb" parameterType="int">
	 		SELECT * FROM board_tb
			WHERE board_no = #{board_no} AND board_div = 3
	 	</select>
	    <!-- 게시글 삭제 -->
	    <update id="teamAddDelete" parameterType="int">
	   		update board_tb
			set delete_yn= 'Y'
			where board_no = #{board_no} 
	    </update>
		<!-- 댓글 작성 -->
		<insert id="teamAddCommentInsert"  parameterType="com.fm.www.dto.Board_Reply">
			INSERT INTO board_reply (REPLY_NO,BOARD_FG,BOARD_NO,USER_NO,REPLY_CONTENT,REPLY_DATE,REPLY_DELETE_YN)
			VALUES (board_reply_SEQ.nextval,3,#{board_no},#{user_no},#{reply_content},sysdate,'N')
		</insert>    
	    
	    <!-- 댓글 리스트 정보 -->
	  	<select id="teamAddReplyList" parameterType="int" resultType="com.fm.www.dto.Board_Reply">
	  		select * from board_reply B, user_tb U
			where B.user_no = U.user_no
			and reply_delete_yn= 'N'
			and board_fg= 3
			and board_no=#{board_no}
			ORDER BY reply_no asc
	  	</select>
	  	<!-- 팀 모집 게시판 댓글 삭제 -->
	  	<update id="teamAddCommentDelete" parameterType="int">
	  		UPDATE board_reply SET REPLY_DELETE_YN = 'Y'
	  		WHERE reply_no = #{reply_no }
	  	</update>
	  	<!-- 팀 모집 게시판 게시글 조회수 증가 -->
	  	<update id="teamAdduphit" parameterType="int">
	  		UPDATE board_tb
	  		SET board_cnt = board_cnt+1
	  		WHERE board_no = #{board_no} 
	  	</update>
	  	<!-- 다음 글 번호 가져 오기 -->
	  	<select id="teamAddgetboard_no" resultType="int">
	  		SELECT board_tb_seq.nextval FROM dual
	  	</select>
	  	
	  	<!-- 게시글 작성 -->
		<insert id="teamAddWrite1" parameterType="com.fm.www.dto.Board_tb">
		  	INSERT INTO board_tb(BOARD_NO, USER_NO, BOARD_DIV, BOARD_TITLE, BOARD_CONTENT, DELETE_YN, BOARD_DATE, BOARD_CNT) 
			VALUES( #{board_no}, #{user_no}, 3,#{board_title},#{board_content},'N', sysdate, 0 )
		</insert>
	  	<!-- 이미지 파일 없이 글 작성 -->
	   <insert id="teamAddWrite2" parameterType="com.fm.www.dto.Board_tb">
	         INSERT INTO board_tb(BOARD_NO, USER_NO, BOARD_DIV, BOARD_TITLE, BOARD_CONTENT, DELETE_YN, BOARD_DATE, BOARD_CNT) 
			VALUES( board_tb_seq.nextval, #{user_no}, 3,#{board_title},#{board_content},'N', sysdate, 0 )
	   </insert>
	    <!-- 게시글 수정 -->
	    <update id="teamAddUpdate" parameterType="com.fm.www.dto.Board_tb">
	    	UPDATE board_tb SET board_title=#{board_title} , board_content=#{board_content}
	    	WHERE board_no = #{board_no}
	    </update>
	  	<!-- 파일 첨부 -->
	  	<insert id="teamAddphotoWrite" parameterType="com.fm.www.dto.Photo">
	  	
	  		INSERT INTO photo (PHOTO_NO,PHOTO_ORIGIN,PHOTO_STORED,BOARD_FG,BOARD_NO,PHOTO_DELETE_YN)
	  		VALUES (photo_seq.nextval, #{photo_origin }, #{photo_stored }, 3, #{board_no }, 'N')
	  	</insert>
   		<!-- 팀 모집 게시글 파일 존재 여부 -->
   		<select id="teamAddcntphoto" parameterType="int" resultType="int">
   			SELECT COUNT(*) FROM photo
   			WHERE board_no = #{board_no}
   		</select>
   		<!-- 게시글 파일 수정 -->
   		<update id="teamAddphotoUpdate" parameterType="com.fm.www.dto.Photo">
   			UPDATE photo SET PHOTO_ORIGIN = #{photo_origin} , PHOTO_STORED = #{photo_stored}
   			WHERE board_no = #{board_no}
   		</update>
   		<!-- 수정전 글 가져오기 -->
   		<select id="teamAddUpdateView" parameterType="int" resultType="com.fm.www.dto.Board_tb">
   			SELECT * FROM board_tb
   			WHERE board_no = #{board_no}
   		</select>
   		
   		<!-- 수정전 파일첨부 가져오기 -->
   		<select id="teamAddUpdatephoto" parameterType="int" resultType="com.fm.www.dto.Photo">
   			SELECT * FROM photo
   			WHERE board_no = #{board_no}
   		</select>
   		
   		<!-- 조회수 감소 -->
   		<update id="DownHit" parameterType="int">
   			update board_tb
    	 	 set board_cnt = board_cnt -1
     		 where board_no = #{board_no} 
   		</update>
   		
   		<!-- board_no로 게시글 사진 조회 -->
		<select id="photoStoredName" parameterType="int" resultType="String">
			SELECT photo_stored FROM PHOTO
			WHERE board_no = #{board_no}
		</select>
   		
   		<!-- 다음글 확인 여부 -->
   		<select id="selectCntNextArticle" resultType="int" parameterType="com.fm.www.dto.Board_tb">
   		<![CDATA[ 
   		SELECT COUNT(*) FROM board_tb
		WHERE board_no in (
            (
                SELECT MIN(board_no) 
                FROM board_tb
                WHERE board_no > #{board_no} AND  board_div = #{board_div} )
		)
		]]>
   		</select>
   		
   		<!-- 이전글 확인 여부 -->
   		<select id="selectCntPreviousArticle" resultType="int" parameterType="int">
   		<![CDATA[ 
   		SELECT COUNT(*) FROM board_tb
		WHERE board_no in (
            (
                SELECT MAX(board_no) 
                FROM board_tb
                WHERE board_no < #{board_no} AND  board_div = #{board_div} )
		)
		]]>
   		</select>
   		
   		<!-- 다음글 번호 가져오기 -->
   		<select id="ViewNext" resultType="int" parameterType="com.fm.www.dto.Board_tb">
   		<![CDATA[ 
   		SELECT board_no FROM board_tb
		WHERE board_no in (
            (
                SELECT MIN(board_no) 
                FROM board_tb
                WHERE board_no > #{board_no} AND  board_div = #{board_div} )
		)
		]]>
   		</select>
   		
   		<!-- 이전글 번호 가져오기 -->
   		<select id="ViewPrevious" resultType="int" parameterType="com.fm.www.dto.Board_tb">
   		<![CDATA[ 
   		SELECT board_no FROM board_tb
		WHERE board_no in (
            (
                SELECT MAX(board_no) 
                FROM board_tb
                WHERE board_no < #{board_no} AND board_div = #{board_div} )
		)
		]]>
   		</select>
   		
</mapper>